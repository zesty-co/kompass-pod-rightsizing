nameOverride: ""
fullnameOverride: ""
imagePullPolicy : "Always"
registry: 473301030746.dkr.ecr.us-west-2.amazonaws.com

serviceAccount:
  name: "zesty-kompass-rightsizing"

actionTaker:
  name: "action-taker"
  image:
    name: "/pod-rightsizing/action-taker"
    tag: "latest"

recommendationsMaker:
  name: "recommendations-maker"
  image:
    name: "/pod-rightsizing/recommendations-maker"
    tag: "latest"
  port: 8088

podRightsizingConfig:
  name: ""

cert-manager:
  enabled: true
  # namespace: cert-manager
  crds:
    enabled: true

kube-state-metrics:
  enabled: true
  fullnameOverride: pilot-kube-state-metrics
  # namespaceOverride: monitoring
  extraArgs:
    - --metric-annotations-allowlist=pods=[*]

tests:
  enabled: false
  dev_env: false
  recommendation_maker_dry_run: false
  # This section is used to pass values to the subchart
  values:
    recommendation_maker_dry_run: false

grafana:
  # Default values for grafana.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  enabled: true
  # namespace: monitoring
  replicaCount: 1

  image:
    repository: nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}



